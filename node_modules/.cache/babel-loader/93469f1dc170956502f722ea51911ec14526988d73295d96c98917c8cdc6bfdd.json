{"ast":null,"code":"var _jsxFileName = \"D:\\\\Nitish\\\\Textutils\\\\textutils\\\\src\\\\App.js\",\n  _s = $RefreshSig$();\nimport { useState } from 'react';\nimport './App.css';\n// import About from './Components/About';\nimport Navbar from './Components/Navbar';\nimport Textforms from './Components/TextForm';\nimport Alert from './Components/Alert';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nfunction App() {\n  _s();\n  const [mode, setMode] = useState('light');\n  const toggleMode = () => {\n    if (mode === 'light') {\n      setMode('dark');\n      document.body.style.backgroundColor = \"#161623\";\n    } else {\n      setMode('light');\n      document.body.style.backgroundColor = \"white\";\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(Navbar, {\n      title: \"TextUtils\",\n      mode: mode,\n      toggleMode: toggleMode\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Alert, {\n      alert: \"This is alert\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Textforms, {\n      heading: \"Enter the text to analyze\",\n      mode: mode\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true);\n}\n_s(App, \"Vs8mkvwR7CZ7J6LLj80enWdttac=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["useState","Navbar","Textforms","Alert","jsxDEV","_jsxDEV","Fragment","_Fragment","App","_s","mode","setMode","toggleMode","document","body","style","backgroundColor","children","title","fileName","_jsxFileName","lineNumber","columnNumber","alert","heading","_c","$RefreshReg$"],"sources":["D:/Nitish/Textutils/textutils/src/App.js"],"sourcesContent":["import { useState } from 'react';\nimport './App.css';\n// import About from './Components/About';\nimport Navbar from './Components/Navbar';\nimport Textforms from './Components/TextForm'; \nimport Alert from './Components/Alert';\n\nfunction App() {\n  \n  const [mode, setMode] = useState ('light');\n  \n\n  const toggleMode = () => {\n    if(mode === 'light') {\n      setMode('dark')\n      document.body.style.backgroundColor = \"#161623\";\n    }\n    else {\n      setMode('light')\n      document.body.style.backgroundColor = \"white\";\n    }\n  }\n\n  return (\n    <>\n      {/* <Navbar title=\"TextUtils\" aboutText=\"About TextUtils\"/> */}\n      {/* <Navbar/> */}\n      <Navbar title=\"TextUtils\" mode={mode} toggleMode = {toggleMode}/>\n\n      <Alert alert=\"This is alert\"/>\n\n      <Textforms heading = \"Enter the text to analyze\" mode={mode} />\n      {/* <About/> */}\n\n      \n\n    </>\n  );\n}\n\n\n\nexport default App;\n"],"mappings":";;AAAA,SAASA,QAAQ,QAAQ,OAAO;AAChC,OAAO,WAAW;AAClB;AACA,OAAOC,MAAM,MAAM,qBAAqB;AACxC,OAAOC,SAAS,MAAM,uBAAuB;AAC7C,OAAOC,KAAK,MAAM,oBAAoB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAAA,SAAAC,QAAA,IAAAC,SAAA;AAEvC,SAASC,GAAGA,CAAA,EAAG;EAAAC,EAAA;EAEb,MAAM,CAACC,IAAI,EAAEC,OAAO,CAAC,GAAGX,QAAQ,CAAE,OAAO,CAAC;EAG1C,MAAMY,UAAU,GAAGA,CAAA,KAAM;IACvB,IAAGF,IAAI,KAAK,OAAO,EAAE;MACnBC,OAAO,CAAC,MAAM,CAAC;MACfE,QAAQ,CAACC,IAAI,CAACC,KAAK,CAACC,eAAe,GAAG,SAAS;IACjD,CAAC,MACI;MACHL,OAAO,CAAC,OAAO,CAAC;MAChBE,QAAQ,CAACC,IAAI,CAACC,KAAK,CAACC,eAAe,GAAG,OAAO;IAC/C;EACF,CAAC;EAED,oBACEX,OAAA,CAAAE,SAAA;IAAAU,QAAA,gBAGEZ,OAAA,CAACJ,MAAM;MAACiB,KAAK,EAAC,WAAW;MAACR,IAAI,EAAEA,IAAK;MAACE,UAAU,EAAIA;IAAW;MAAAO,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAC,CAAC,eAEjEjB,OAAA,CAACF,KAAK;MAACoB,KAAK,EAAC;IAAe;MAAAJ,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAC,CAAC,eAE9BjB,OAAA,CAACH,SAAS;MAACsB,OAAO,EAAG,2BAA2B;MAACd,IAAI,EAAEA;IAAK;MAAAS,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC;EAAA,eAK/D,CAAC;AAEP;AAACb,EAAA,CA/BQD,GAAG;AAAAiB,EAAA,GAAHjB,GAAG;AAmCZ,eAAeA,GAAG;AAAC,IAAAiB,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}