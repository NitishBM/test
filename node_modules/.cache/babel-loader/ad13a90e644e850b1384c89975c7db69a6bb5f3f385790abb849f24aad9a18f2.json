{"ast":null,"code":"import _slicedToArray from\"D:/Nitish/Textutils/textutils/node_modules/@babel/runtime/helpers/esm/slicedToArray.js\";import{useState}from'react';import'./App.css';// import About from './Components/About';\nimport Navbar from'./Components/Navbar';import Textforms from'./Components/TextForm';import Alert from'./Components/Alert';import{jsx as _jsx}from\"react/jsx-runtime\";import{Fragment as _Fragment}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";function App(){//This UseState is for Dark Mode\nvar _useState=useState('light'),_useState2=_slicedToArray(_useState,2),mode=_useState2[0],setMode=_useState2[1];//This UseState is for Alert\nvar _useState3=useState(null),_useState4=_slicedToArray(_useState3,2),alert=_useState4[0],setAlert=_useState4[1];//This Method returns setting the Alert message\nvar showAlert=function showAlert(message,type){setAlert({msg:message,type:type});setTimeout(function(){setAlert(null);},1000);};//This method returns weather dark mode is light or dark\nvar toggleMode=function toggleMode(){if(mode==='light'){setMode('dark');document.body.style.backgroundColor=\"#161623\";showAlert(\"Dark Mode Enabled\",\"success\");}else{setMode('light');document.body.style.backgroundColor=\"white\";showAlert(\"Light Mode Enabled\",\"success\");}};return/*#__PURE__*/_jsxs(_Fragment,{children:[/*#__PURE__*/_jsx(Navbar,{title:\"TextUtils\",mode:mode,toggleMode:toggleMode}),/*#__PURE__*/_jsx(Alert,{alert:alert}),/*#__PURE__*/_jsx(Textforms,{showAlert:showAlert,heading:\"Enter the text to analyze\",mode:mode})]});}export default App;","map":{"version":3,"names":["useState","Navbar","Textforms","Alert","jsx","_jsx","Fragment","_Fragment","jsxs","_jsxs","App","_useState","_useState2","_slicedToArray","mode","setMode","_useState3","_useState4","alert","setAlert","showAlert","message","type","msg","setTimeout","toggleMode","document","body","style","backgroundColor","children","title","heading"],"sources":["D:/Nitish/Textutils/textutils/src/App.js"],"sourcesContent":["import { useState } from 'react';\nimport './App.css';\n// import About from './Components/About';\nimport Navbar from './Components/Navbar';\nimport Textforms from './Components/TextForm'; \nimport Alert from './Components/Alert';\n\nfunction App() {\n  \n  //This UseState is for Dark Mode\n  const [mode, setMode] = useState ('light');\n\n  //This UseState is for Alert\n  const [alert, setAlert] = useState(null);\n\n  //This Method returns setting the Alert message\n  const showAlert = (message, type) => {\n    setAlert({\n      msg : message,\n      type : type\n    })\n\n    setTimeout(() => {\n      setAlert(null);\n    }, 1000);\n  }\n\n  //This method returns weather dark mode is light or dark\n  const toggleMode = () => {\n    if(mode === 'light') {\n      setMode('dark')\n      document.body.style.backgroundColor = \"#161623\";\n      showAlert(\"Dark Mode Enabled\", \"success\");\n    }\n    else {\n      setMode('light')\n      document.body.style.backgroundColor = \"white\";\n      showAlert(\"Light Mode Enabled\", \"success\");\n    }\n  }\n\n  return (\n    <>\n      {/* <Navbar title=\"TextUtils\" aboutText=\"About TextUtils\"/> */}\n      {/* <Navbar/> */}\n      <Navbar title=\"TextUtils\" mode={mode} toggleMode = {toggleMode}/>\n\n      <Alert alert={alert}/>\n\n      <Textforms showAlert={showAlert} heading = \"Enter the text to analyze\" mode={mode} />\n      {/* <About/> */}\n\n      \n\n    </>\n  );\n}\n\n\n\nexport default App;\n"],"mappings":"mHAAA,OAASA,QAAQ,KAAQ,OAAO,CAChC,MAAO,WAAW,CAClB;AACA,MAAO,CAAAC,MAAM,KAAM,qBAAqB,CACxC,MAAO,CAAAC,SAAS,KAAM,uBAAuB,CAC7C,MAAO,CAAAC,KAAK,KAAM,oBAAoB,CAAC,OAAAC,GAAA,IAAAC,IAAA,gCAAAC,QAAA,IAAAC,SAAA,gCAAAC,IAAA,IAAAC,KAAA,yBAEvC,QAAS,CAAAC,GAAGA,CAAA,CAAG,CAEb;AACA,IAAAC,SAAA,CAAwBX,QAAQ,CAAE,OAAO,CAAC,CAAAY,UAAA,CAAAC,cAAA,CAAAF,SAAA,IAAnCG,IAAI,CAAAF,UAAA,IAAEG,OAAO,CAAAH,UAAA,IAEpB;AACA,IAAAI,UAAA,CAA0BhB,QAAQ,CAAC,IAAI,CAAC,CAAAiB,UAAA,CAAAJ,cAAA,CAAAG,UAAA,IAAjCE,KAAK,CAAAD,UAAA,IAAEE,QAAQ,CAAAF,UAAA,IAEtB;AACA,GAAM,CAAAG,SAAS,CAAG,QAAZ,CAAAA,SAASA,CAAIC,OAAO,CAAEC,IAAI,CAAK,CACnCH,QAAQ,CAAC,CACPI,GAAG,CAAGF,OAAO,CACbC,IAAI,CAAGA,IACT,CAAC,CAAC,CAEFE,UAAU,CAAC,UAAM,CACfL,QAAQ,CAAC,IAAI,CAAC,CAChB,CAAC,CAAE,IAAI,CAAC,CACV,CAAC,CAED;AACA,GAAM,CAAAM,UAAU,CAAG,QAAb,CAAAA,UAAUA,CAAA,CAAS,CACvB,GAAGX,IAAI,GAAK,OAAO,CAAE,CACnBC,OAAO,CAAC,MAAM,CAAC,CACfW,QAAQ,CAACC,IAAI,CAACC,KAAK,CAACC,eAAe,CAAG,SAAS,CAC/CT,SAAS,CAAC,mBAAmB,CAAE,SAAS,CAAC,CAC3C,CAAC,IACI,CACHL,OAAO,CAAC,OAAO,CAAC,CAChBW,QAAQ,CAACC,IAAI,CAACC,KAAK,CAACC,eAAe,CAAG,OAAO,CAC7CT,SAAS,CAAC,oBAAoB,CAAE,SAAS,CAAC,CAC5C,CACF,CAAC,CAED,mBACEX,KAAA,CAAAF,SAAA,EAAAuB,QAAA,eAGEzB,IAAA,CAACJ,MAAM,EAAC8B,KAAK,CAAC,WAAW,CAACjB,IAAI,CAAEA,IAAK,CAACW,UAAU,CAAIA,UAAW,CAAC,CAAC,cAEjEpB,IAAA,CAACF,KAAK,EAACe,KAAK,CAAEA,KAAM,CAAC,CAAC,cAEtBb,IAAA,CAACH,SAAS,EAACkB,SAAS,CAAEA,SAAU,CAACY,OAAO,CAAG,2BAA2B,CAAClB,IAAI,CAAEA,IAAK,CAAE,CAAC,EAKrF,CAAC,CAEP,CAIA,cAAe,CAAAJ,GAAG"},"metadata":{},"sourceType":"module","externalDependencies":[]}